esphome:
  name: smart_doorbell
  platform: ESP32
  board: nodemcu-32s

wifi:
  networks:
  - ssid: Pound Town
    password: carclockchair
    manual_ip:
      # Set this to the IP of the ESP
      static_ip: 10.0.0.19
      # Set this to the IP address of the router. Often ends with .1
      gateway: 10.0.0.1
      # The subnet of the network. 255.255.255.0 works for most home networks.
      subnet: 255.255.255.0

  - bssid: b0:95:75:f1:3e:aa
    password: carclockchair
    priority: 1
    manual_ip:
      # Set this to the IP of the ESP
      static_ip: 10.0.0.19
      # Set this to the IP address of the router. Often ends with .1
      gateway: 10.0.0.1
      # The subnet of the network. 255.255.255.0 works for most home networks.
      subnet: 255.255.255.0


  # manual_ip:
  #   # Set this to the IP of the ESP
  #   static_ip: 10.0.0.19
  #   # Set this to the IP address of the router. Often ends with .1
  #   gateway: 10.0.0.1
  #   # The subnet of the network. 255.255.255.0 works for most home networks.
  #   subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Smart Doorbell"
    password: "wsevDJtd8wxf"

#captive_portal:

# Enable logging.
logger:

api:
  encryption:
    key: zEBxsiPCPZLVG6xRrj3faYPUcDZatSNd+nrlnhFq+u8=

ota:
  password: "fjsoifnjsbfnvipf2342dwfv"

# Sync time with Home Assistant.
time:
  - platform: homeassistant
    id: homeassistant_time

  - platform: sntp
    on_time:
      - cron: '00 0 2 * * *'
        then:
          - switch.toggle: restart_switch
sensor:
  - platform: wifi_signal
    name: "Smart Doorbell WiFi Status"
    update_interval: 60s

# Global to store the on/off state of the chime
globals:
  - id: chime
    type: bool
    restore_value: true
    initial_value: 'true'

# Exposed switches.
switch:
  # Switch to restart the doorbell.
  - platform: restart
    id: restart_switch
    name: Doorbell Restart

  # Switch to turn on/off the chime.
  - platform: gpio
    id: relay
    inverted: true
    name: Doorbell Chime
    pin: 18

  # Switch to turn on/off chime when
  # doorbell button is pushed.
  #
  # It creates a "virtual" switch based
  # on a global variable.
  - platform: template
    name: Doorbell Chime Active
    id: chime_active
    restore_mode: RESTORE_DEFAULT_ON 
    turn_on_action:
      - globals.set:
          id: chime
          value: 'true'
    turn_off_action:
      - globals.set:
          id: chime
          value: 'false'
    lambda: |-
      return id(chime);

  - platform: template
    name: Doorbell Chime From Home Assistant
    id: chime_ha
    restore_mode: ALWAYS_OFF
    turn_on_action:
      - switch.turn_on: relay
      - delay: 4s
      - switch.turn_off: relay
      - switch.turn_off: chime_ha
    # turn_on_action:
    #   if:
    #     condition:
    #       - switch.is_on: chime_active
    #     then:
    #       - switch.turn_on: relay
    #       - delay: 4s
    #       - switch.turn_off: relay
    #       - switch.turn_off: chime_ha
    #     else:
    #       - logger.log: "HA chime off"
    #       - switch.turn_off: chime_ha



# Binary sensor representing the
# Doorbell button push.
binary_sensor:
  - platform: gpio
    id: button
    name: Doorbell Button
    pin:
      # Connected to GPIO on the ESP-01S.
      number: 14
      mode: INPUT_PULLUP
      inverted: true
    filters:
      # Small filter, to debounce the button press.
      - delayed_on: 100ms
      - delayed_off: 100ms
    on_press:
      # Only turn on the chime when it is active and connected to HA
      then:
        - if:
            condition:
              and:
                - switch.is_on: chime_active
                - switch.is_off: relay
                - api.connected:
            then:
              - switch.turn_on: relay
              - delay: 2s
              - switch.turn_off: relay
        # Activate chime if disconnected from HA or xiaomi gateway is offline
        - if:
            condition:
              or:
                - text_sensor.state:
                    id: xiaomi
                    state: 'away'
                - not:
                  - api.connected:
            then:
              - switch.turn_on: relay
              - delay: 2s
              - switch.turn_off: relay
    #on_release:
      # On release, turn of the chime.
      #- switch.turn_off: relay

  - platform: status
    name: "Smart Doorbell Status"

text_sensor:
  - platform: homeassistant
    id: xiaomi
    name: "Xiaomi Doorbell Status"
    entity_id: device_tracker.xiaomi_miio_gateway


interval:
  - interval: 30s
    then:
      - if:
          condition:
            - switch.is_on: relay
          then:
            - delay: 10s
            - if:
                condition: 
                  - switch.is_on: relay
                then:
                  - switch.turn_off: relay


